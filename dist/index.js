#!/usr/bin/env node
import{Command as g}from"commander";import i from"node:path";import{existsSync as u,promises as l}from"node:fs";import{z as a}from"zod";import w from"ora";import f from"prompts";var x=a.object({components:a.array(a.string()).optional(),yes:a.boolean(),overwrite:a.boolean(),cwd:a.string(),all:a.boolean(),path:a.string().optional(),silent:a.boolean(),srcDir:a.boolean().optional()}),v=new g().name("add").description("Adiciona um componente ao seu projeto").argument("[components...]","os componentes a serem adicionados ou uma URL para o componente.").option("-y, --yes","pular o prompt de confirma\xE7\xE3o.",!1).option("-o, --overwrite","sobrescrever arquivos existentes.",!1).option("-c, --cwd <cwd>","o diret\xF3rio de trabalho. padr\xE3o \xE9 o diret\xF3rio atual.",process.cwd()).option("-a, --all","adicionar todos os componentes dispon\xEDveis",!1).option("-p, --path <path>","o caminho para adicionar o componente.").option("-s, --silent","silenciar a sa\xEDda.",!1).option("--src-dir","usar o diret\xF3rio src ao criar um novo projeto.",!1).action(async(o,e)=>{try{let n=x.parse({components:o,cwd:i.resolve(e.cwd),...e}),s=i.resolve("src/components"),r=await h(s);if(r.length===0){console.log("Nenhuma pasta dispon\xEDvel para copiar.");return}let{selectedDir:c}=await f({type:"select",name:"selectedDir",message:"Qual pasta voc\xEA gostaria de copiar?",choices:r.map(p=>({title:p,value:p}))});if(!c){console.log("Nenhuma pasta selecionada.");return}let t=i.join(s,c);if(!o.length){let p=await h(t),{components:d}=await f({type:"multiselect",name:"components",message:"Quais componentes voc\xEA gostaria de adicionar?",hint:"Espa\xE7o para selecionar. A para selecionar todos. Enter para enviar.",instructions:!1,choices:p.map(m=>({title:m,value:m,selected:n.all}))});o=d}!o.length&&!n.all&&console.log("Nenhum componente foi selecionado."),await C(t,o,n)}catch(n){console.error("Erro ao copiar componentes:",n)}});async function j(){let o=i.resolve("src/ui");try{return(await l.readdir(o)).filter(n=>!n.includes("."))}catch(e){return console.error("Erro ao listar componentes:",e),[]}}async function y(o,e,n=!1){let s=await l.readdir(o,{withFileTypes:!0});u(e)||await l.mkdir(e,{recursive:!0});for(let r of s){let c=i.join(o,r.name),t=i.join(e,r.name);if(r.isDirectory())await y(c,t,n);else{if(u(t)&&!n){console.log(`Arquivo ${r.name} j\xE1 existe em ${e}. Pulando...`);continue}await l.copyFile(c,t),console.log(`Arquivo ${r.name} copiado para ${e}.`)}}}async function C(o,e,{overwrite:n,cwd:s}){let r=await j(),c=w("Copiando componentes...").start();for(let t of e){if(!r.includes(t)){console.log(`Componente ${t} n\xE3o est\xE1 dispon\xEDvel.`);continue}let p=i.join(o,t),d=i.join(s,t);try{await y(p,d,n),console.log(`Componente ${t} copiado para ${s}.`)}catch(m){console.error(`Erro ao copiar ${t}:`,m)}}c.succeed("Todos os componentes foram copiados.")}async function h(o){let e=[];try{let n=await l.readdir(o,{withFileTypes:!0});for(let s of n)s.isDirectory()&&e.push(s.name)}catch(n){console.error(`Erro ao ler o diret\xF3rio ${o}:`,n)}return e}import{Command as $}from"commander";var b={name:"cli",version:"1.0.0",description:"cli for softlive",main:"index.js",type:"module",license:"MIT",exports:"./dist/index.js",bin:"./dist/index.js",dependencies:{commander:"^12.1.0",ora:"^8.1.0",prompts:"^2.4.2",zod:"^3.23.8"},scripts:{dev:"tsup --watch",build:"tsup",typecheck:"tsc --noEmit",clean:"rimraf dist && rimraf components","start:dev":"cross-env REGISTRY_URL=http://localhost:3333/r node dist/index.js",start:"node dist/index.js","format:write":'prettier --write "**/*.{ts,tsx,mdx}" --cache',"format:check":'prettier --check "**/*.{ts,tsx,mdx}" --cache',release:"changeset version","pub:beta":"pnpm build && pnpm publish --no-git-checks --access public --tag beta","pub:next":"pnpm build && pnpm publish --no-git-checks --access public --tag next","pub:release":"pnpm build && pnpm publish --access public",test:"vitest run","test:dev":"REGISTRY_URL=http://localhost:3333/r vitest run"},devDependencies:{"@types/prompts":"^2.4.9","cross-env":"^7.0.3",rimraf:"^6.0.1",tsup:"^8.3.0",typescript:"^5.6.3"}};process.on("SIGINT",()=>process.exit(0));process.on("SIGTERM",()=>process.exit(0));async function R(){let o=new $().name("softlive").description("add components and dependencies to your project").version(b.version||"1.0.0","-v, --version","display the version number");o.addCommand(v),o.parse()}R();
//# sourceMappingURL=index.js.map