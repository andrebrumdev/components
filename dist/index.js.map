{"version":3,"sources":["../src/commands/add.ts","../src/index.ts","../package.json"],"sourcesContent":["import { Command } from \"commander\";\r\nimport path from \"node:path\";\r\nimport { existsSync, promises as fs } from \"node:fs\"; // Usar fs para ler diretórios e arquivos\r\nimport { z } from \"zod\";\r\nimport ora from \"ora\";\r\nimport prompts from \"prompts\"; // Importa prompts para interatividade\r\n\r\nexport const addOptionsSchema = z.object({\r\n  components: z.array(z.string()).optional(),\r\n  yes: z.boolean(),\r\n  overwrite: z.boolean(),\r\n  cwd: z.string(),\r\n  all: z.boolean(),\r\n  path: z.string().optional(),\r\n  silent: z.boolean(),\r\n  srcDir: z.boolean().optional(),\r\n});\r\n\r\nexport const add = new Command()\r\n  .name(\"add\")\r\n  .description(\"Adiciona um componente ao seu projeto\")\r\n  .argument(\r\n    \"[components...]\",\r\n    \"os componentes a serem adicionados ou uma URL para o componente.\"\r\n  )\r\n  .option(\"-y, --yes\", \"pular o prompt de confirmação.\", false)\r\n  .option(\"-o, --overwrite\", \"sobrescrever arquivos existentes.\", false)\r\n  .option(\r\n    \"-c, --cwd <cwd>\",\r\n    \"o diretório de trabalho. padrão é o diretório atual.\",\r\n    process.cwd()\r\n  )\r\n  .option(\"-a, --all\", \"adicionar todos os componentes disponíveis\", false)\r\n  .option(\"-p, --path <path>\", \"o caminho para adicionar o componente.\")\r\n  .option(\"-s, --silent\", \"silenciar a saída.\", false)\r\n  .option(\"--src-dir\", \"usar o diretório src ao criar um novo projeto.\", false)\r\n  .action(async (components, opts) => {\r\n    try {\r\n      const options = addOptionsSchema.parse({\r\n        components,\r\n        cwd: path.resolve(opts.cwd),\r\n        ...opts,\r\n      });\r\n      const baseDir = path.resolve(\"src/components\"); // Diretório base onde as subpastas são buscadas (src)\r\n      const availableDirs = await getAvailableDirectories(baseDir); // Obtém as subpastas\r\n\r\n      if (availableDirs.length === 0) {\r\n        console.log(\"Nenhuma pasta disponível para copiar.\");\r\n        return;\r\n      }\r\n\r\n      // Exibe a seleção interativa de pastas\r\n      const { selectedDir } = await prompts({\r\n        type: \"select\",\r\n        name: \"selectedDir\",\r\n        message: \"Qual pasta você gostaria de copiar?\",\r\n        choices: availableDirs.map((dir) => ({ title: dir, value: dir })),\r\n      });\r\n\r\n      if (!selectedDir) {\r\n        console.log(\"Nenhuma pasta selecionada.\");\r\n        return;\r\n      }\r\n\r\n      // Se o usuário não forneceu componentes, exibir prompt para selecionar\r\n      const srcDir = path.join(baseDir, selectedDir); // Diretório da pasta selecionada\r\n      if (!components.length) {\r\n        const availableComponents = await getAvailableDirectories(srcDir); // Obtenha os componentes disponíveis\r\n\r\n        // Exibir a seleção interativa com prompts\r\n        const { components: selectedComponents } = await prompts({\r\n          type: \"multiselect\",\r\n          name: \"components\",\r\n          message: \"Quais componentes você gostaria de adicionar?\",\r\n          hint: \"Espaço para selecionar. A para selecionar todos. Enter para enviar.\",\r\n          instructions: false,\r\n          choices: availableComponents.map((component) => ({\r\n            title: component, // Exibe o nome do componente na interface\r\n            value: component, // Valor selecionado\r\n            selected: options.all, // Marca todos os componentes se --all for passado\r\n          })),\r\n        });\r\n\r\n        // Atualizar os componentes selecionados\r\n        components = selectedComponents;\r\n      }\r\n\r\n      if (!components.length && !options.all) {\r\n        console.log(\"Nenhum componente foi selecionado.\");\r\n      }\r\n\r\n      // Copiar os componentes\r\n      await copyComponents(srcDir, components, options);\r\n    } catch (error) {\r\n      console.error(\"Erro ao copiar componentes:\", error);\r\n    }\r\n  });\r\n\r\n// Função para obter os componentes disponíveis no diretório de origem\r\nasync function getAvailableComponents() {\r\n  const componentsDir = path.resolve(\"src/ui\"); // Ajuste conforme a origem real dos componentes\r\n  try {\r\n    const files = await fs.readdir(componentsDir);\r\n    return files.filter((file) => !file.includes(\".\")); // Retorna apenas diretórios (outra lógica pode ser aplicada conforme a necessidade)\r\n  } catch (error) {\r\n    console.error(\"Erro ao listar componentes:\", error);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Função para copiar uma pasta de origem para destino\r\nasync function copyFolder(srcDir: string, destDir: string, overwrite = false) {\r\n  const entries = await fs.readdir(srcDir, { withFileTypes: true });\r\n\r\n  // Cria a pasta de destino se não existir\r\n  if (!existsSync(destDir)) {\r\n    await fs.mkdir(destDir, { recursive: true });\r\n  }\r\n\r\n  for (const entry of entries) {\r\n    const srcPath = path.join(srcDir, entry.name);\r\n    const destPath = path.join(destDir, entry.name);\r\n\r\n    if (entry.isDirectory()) {\r\n      // Recursivamente copiar subpastas\r\n      await copyFolder(srcPath, destPath, overwrite);\r\n    } else {\r\n      // Se for um arquivo, copia ele\r\n      if (existsSync(destPath) && !overwrite) {\r\n        console.log(\r\n          `Arquivo ${entry.name} já existe em ${destDir}. Pulando...`\r\n        );\r\n        continue;\r\n      }\r\n      await fs.copyFile(srcPath, destPath);\r\n      console.log(`Arquivo ${entry.name} copiado para ${destDir}.`);\r\n    }\r\n  }\r\n}\r\n\r\n// Função para copiar os componentes selecionados\r\nasync function copyComponents(\r\n  componentsDir: string,\r\n  components: any,\r\n  { overwrite, cwd: destDir }: z.infer<typeof addOptionsSchema>\r\n) {\r\n  const availableComponents = await getAvailableComponents();\r\n  const spinner = ora(\"Copiando componentes...\").start();\r\n\r\n  // Copia os componentes especificados\r\n  for (const component of components) {\r\n    if (!availableComponents.includes(component)) {\r\n      console.log(`Componente ${component} não está disponível.`);\r\n      continue;\r\n    }\r\n\r\n    const srcComponentDir = path.join(componentsDir, component);\r\n    const destComponentDir = path.join(destDir, component);\r\n\r\n    try {\r\n      // Copia a pasta inteira\r\n      await copyFolder(srcComponentDir, destComponentDir, overwrite);\r\n      console.log(`Componente ${component} copiado para ${destDir}.`);\r\n    } catch (error) {\r\n      console.error(`Erro ao copiar ${component}:`, error);\r\n    }\r\n  }\r\n\r\n  spinner.succeed(\"Todos os componentes foram copiados.\");\r\n}\r\n\r\nasync function getAvailableDirectories(baseDir: string) {\r\n  const directories = [];\r\n  try {\r\n    const entries = await fs.readdir(baseDir, { withFileTypes: true });\r\n    for (const entry of entries) {\r\n      if (entry.isDirectory()) {\r\n        directories.push(entry.name); // Adiciona a subpasta como uma opção\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(`Erro ao ler o diretório ${baseDir}:`, error);\r\n  }\r\n  return directories;\r\n}\r\n","#!/usr/bin/env node\r\nimport { add } from \"@/src/commands/add\";\r\n// import { diff } from \"@/src/commands/diff\"\r\n// import { init } from \"@/src/commands/init\"\r\nimport { Command } from \"commander\";\r\n\r\nimport packageJson from \"../package.json\";\r\n\r\nprocess.on(\"SIGINT\", () => process.exit(0));\r\nprocess.on(\"SIGTERM\", () => process.exit(0));\r\n\r\nasync function main() {\r\n  const program = new Command()\r\n    .name(\"softlive\")\r\n    .description(\"add components and dependencies to your project\")\r\n    .version(\r\n      packageJson.version || \"1.0.0\",\r\n      \"-v, --version\",\r\n      \"display the version number\"\r\n    );\r\n\r\n  program.addCommand(add);\r\n\r\n  program.parse();\r\n}\r\n\r\nmain();\r\n","{\r\n  \"name\": \"cli\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"cli for softlive\",\r\n  \"main\": \"index.js\",\r\n  \"type\": \"module\",\r\n  \"license\": \"MIT\",\r\n  \"exports\": \"./dist/index.js\",\r\n  \"bin\": \"./dist/index.js\",\r\n  \"dependencies\": {\r\n    \"commander\": \"^12.1.0\",\r\n    \"ora\": \"^8.1.0\",\r\n    \"prompts\": \"^2.4.2\",\r\n    \"zod\": \"^3.23.8\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"tsup --watch\",\r\n    \"build\": \"tsup\",\r\n    \"typecheck\": \"tsc --noEmit\",\r\n    \"clean\": \"rimraf dist && rimraf components\",\r\n    \"start:dev\": \"cross-env REGISTRY_URL=http://localhost:3333/r node dist/index.js\",\r\n    \"start\": \"node dist/index.js\",\r\n    \"format:write\": \"prettier --write \\\"**/*.{ts,tsx,mdx}\\\" --cache\",\r\n    \"format:check\": \"prettier --check \\\"**/*.{ts,tsx,mdx}\\\" --cache\",\r\n    \"release\": \"changeset version\",\r\n    \"pub:beta\": \"pnpm build && pnpm publish --no-git-checks --access public --tag beta\",\r\n    \"pub:next\": \"pnpm build && pnpm publish --no-git-checks --access public --tag next\",\r\n    \"pub:release\": \"pnpm build && pnpm publish --access public\",\r\n    \"test\": \"vitest run\",\r\n    \"test:dev\": \"REGISTRY_URL=http://localhost:3333/r vitest run\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/prompts\": \"^2.4.9\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"rimraf\": \"^6.0.1\",\r\n    \"tsup\": \"^8.3.0\",\r\n    \"typescript\": \"^5.6.3\"\r\n  }\r\n}\r\n"],"mappings":"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","names":["Command","path","existsSync","fs","z","ora","prompts","addOptionsSchema","add","components","opts","options","baseDir","availableDirs","getAvailableDirectories","selectedDir","dir","srcDir","availableComponents","selectedComponents","component","copyComponents","error","getAvailableComponents","componentsDir","file","copyFolder","destDir","overwrite","entries","entry","srcPath","destPath","spinner","srcComponentDir","destComponentDir","directories","Command","package_default","main","program","Command","package_default","add"]}